/* GENERATED FILE */
import { forwardRef, ReactElement } from "react";
import { IconWeight, Icon, IconBase } from "../lib";

const weights = new Map<IconWeight, ReactElement>([
  [
    "bold",
    <>
      <path d="M128,20A108,108,0,1,0,236,128,108.1,108.1,0,0,0,128,20Zm0,192a84,84,0,1,1,84-84A84.1,84.1,0,0,1,128,212Zm44.9-88-36,40a11.9,11.9,0,0,1-17.8,0l-36-40a12,12,0,0,1,17.8-16L128,138.1,155.1,108a12,12,0,0,1,17.8,16Z" />
    </>,
  ],
  [
    "duotone",
    <>
      <g opacity="0.2">
        <circle cx="128" cy="128" r="96" />
      </g>
      <path d="M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Z" />
      <path d="M169.4,110.1a8,8,0,0,0-11.3.5L128,144,97.9,110.6a8,8,0,0,0-11.8,10.8l36,40a8,8,0,0,0,11.8,0l36-40A8,8,0,0,0,169.4,110.1Z" />
    </>,
  ],
  [
    "fill",
    <>
      <path d="M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm41.9,97.4-36,40a8,8,0,0,1-11.8,0l-36-40a8,8,0,0,1,11.8-10.8L128,144l30.1-33.4a8,8,0,1,1,11.8,10.8Z" />
    </>,
  ],
  [
    "light",
    <>
      <path d="M128,26A102,102,0,1,0,230,128,102.2,102.2,0,0,0,128,26Zm0,192a90,90,0,1,1,90-90A90.1,90.1,0,0,1,128,218Zm40-106.5a6,6,0,0,1,.5,8.5l-36,40a6.1,6.1,0,0,1-9,0l-36-40a6,6,0,0,1,9-8L128,147l31.5-35A6,6,0,0,1,168,111.5Z" />
    </>,
  ],
  [
    "regular",
    <>
      <path d="M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm41.9-94.6-36,40a8,8,0,0,1-11.8,0l-36-40a8,8,0,0,1,11.8-10.8L128,144l30.1-33.4a8,8,0,1,1,11.8,10.8Z" />
    </>,
  ],
  [
    "thin",
    <>
      <path d="M128,28A100,100,0,1,0,228,128,100.2,100.2,0,0,0,128,28Zm0,192a92,92,0,1,1,92-92A92.1,92.1,0,0,1,128,220Zm38.7-107a4.1,4.1,0,0,1,.3,5.7l-36,40a4.1,4.1,0,0,1-6,0l-36-40a4,4,0,0,1,6-5.4L128,150l33-36.7A4.1,4.1,0,0,1,166.7,113Z" />
    </>,
  ],
]);

const CaretCircleDown: Icon = forwardRef((props, ref) => (
  <IconBase ref={ref} {...props} weights={weights} />
));

CaretCircleDown.displayName = "CaretCircleDown";

export default CaretCircleDown;
